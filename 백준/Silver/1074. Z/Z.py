# Z

# 처음에 무턱대고 리스트를 만들어서 따라가는 함수를 작성하려 했으나 시간초과가 분명하다는 생각에 재고함.
# 이후 조금만 생각해보니 전체를 4사분면으로 나누어 각 사분면 순서대로의 값을 더해주면 되는 문제라는 것을 파악.
# 좀 걸렸던 부분은 이 문제의 시작점은 1이라고 잘못 생각해서 자꾸 1이 더해지는 바람에 잠시 골치 아팠음.

import sys
input = sys.stdin.readline

# n, r, c 를 입력받고 가장 큰 Z부터 함수를 재귀 호출하여 각 사분면의 값을 전역변수 coun에 더해나가는 함수.
def Z(n, r, c):
    global count

    if n == 0:
        return

    # 좌표가 어느 사분면에 해당하는지를 파악.
    # Z 순서대로 2 -> 1 -> 3 -> 4 이므로, 좌표가 3사분면인 경우 2, 1 사분면의 값을 더하고 생략가능.
    # 다음 재귀 때 범위를 맞추기 위해 좌표값이 기준값보다 큰 경우 2 ** (n - 1) 만큼 빼 주며 조정.
    if r < 2 ** (n - 1):
        if c < 2 ** (n - 1):
            # 2 사분면인 경우, Z가 시작하는 분면으로 생략할 곳이 없음. count에 더하지 않고 넘어감.
            Z(n - 1, r, c)
        else:
            count += (2 ** (n - 1)) ** 2    
            Z(n - 1, r, c - (2 ** (n - 1)))
    else:
        if c < 2 ** (n - 1):
            count += ((2 ** (n - 1)) ** 2) * 2
            Z(n - 1, r - (2 ** (n - 1)), c)
        else:
            count += ((2 ** (n - 1)) ** 2) * 3
            Z(n - 1, r - (2 ** (n - 1)), c - (2 ** (n - 1)))

if __name__ == "__main__":
    N, r, c = map(int, input().split())
    count = 0

    Z(N, r, c)

    print(count)